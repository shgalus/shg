/**
 * \file include/shg/mconsts.h
 *  Mathematical constants.
 * \date Created on 17 July 2014.
 */

#ifndef SHG_MCONSTS_H
#define SHG_MCONSTS_H

namespace SHG {

/**
 * Mathematical constants.
 */
namespace Constants {

/**
 * \defgroup mathematical_constants Mathematical constants
 *
 * Some mathematical constants. Some of the approximations were
 * generated by the following program:
 *
 * \verbinclude gmconsts.cc
 *
 * \{
 */

/**
 * The constant \f$\pi = 3.14\ldots\f$. The approximation is taken
 * from \cite knuth-2002a, p. 647.
 */
template <typename T>
constexpr T pi =
     static_cast<T>(3.1415926535897932384626433832795028841972L);

/**
 * The constant \f$e = 2.718\ldots\f$. The approximation is taken from
 * \cite knuth-2002a, p. 647.
 */
template <typename T>
constexpr T e =
     static_cast<T>(2.7182818284590452353602874713526624977572L);

/**
 * The constant \f$\gamma = 0.577\ldots\f$. The approximation
 * is taken from \cite knuth-2002a, p. 647.
 */
template <typename T>
constexpr T gamma =
     static_cast<T>(0.5772156649015328606065120900824024310422L);

/**
 * The constant \f$1 / \pi\f$. The approximation is taken from
 * \cite knuth-2002a, p. 647.
 */
template <typename T>
constexpr T ipi =
     static_cast<T>(0.3183098861837906715377675267450287240689L);

/**
 * The constant \f$1 / \sqrt{2\pi}\f$.
 */
template <typename T>
constexpr T isqrt2pi =
     static_cast<T>(0.3989422804014326779399460599343818684759L);

/**
 * The constant \f$\sqrt{2\pi}\f$.
 */
template <typename T>
constexpr T sqrt2pi =
     static_cast<T>(2.5066282746310005024157652848110452530070L);

/**
 * The constant \f$1 / \ln 2\f$. See \cite knuth-2002a, p.
 * 647.
 */
template <typename T>
constexpr T iln2 =
     static_cast<T>(1.4426950408889634073599246810018921374266L);

/**
 * The constant \f$\sqrt{2}\f$.
 */
template <typename T>
constexpr T sqrt2 =
     static_cast<T>(1.4142135623730950488016887242096980785697L);

/**
 * The constant \f$1 / \sqrt{2}\f$.
 */
template <typename T>
constexpr T isqrt2 =
     static_cast<T>(0.7071067811865475244008443621048490392848L);

/**
 * The constant \f$\pi^2 / 8\f$.
 */
template <typename T>
constexpr T sqrpi8 =
     static_cast<T>(1.2337005501361698273543113749845188919142L);

/**
 * The constant \f$180 / \pi\f$.
 */
template <typename T>
constexpr T radian =
     static_cast<T>(57.2957795130823208767981548141051703324055L);

/**
 * The constant \f$\pi / 180\f$.
 */
template <typename T>
constexpr T degree =
     static_cast<T>(0.0174532925199432957692369076848861271344L);

/** \} */  // end of group mathematical_constants

}  // namespace Constants

}  // namespace SHG

#endif
